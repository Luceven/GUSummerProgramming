library(leaflet)
library(sp)
library(mapproj)
library(maps)
library(mapdata)
library(maptools)
library(htmlwidgets)
library(magrittr)
library(XML)
library(plyr)
library(rgdal)
library(WDI)
library(raster)
library(noncensus)
library(stringr)
library(tidyr)
library(tigris)
library(rgeos)
library(ggplot2)
library(scales)
data(zip_codes)
data(counties)
setwd("D:\\Adv.program\\weektwo")
CancerRates <- read.csv('CancerCountyFIPS.csv')
#head(CancerRates)
CancerRatesB <- read.csv('CancerCountyFIPS_Breast.csv')
#head(CancerRatesB)
LandUse <- read.csv('LandUseDatasetREALLatlong.csv')
#head(LandUse)
##Yunjia##
##Read in earthquake data
Earthquake <- read.csv('Earthquakes_7day.csv')
#head(Earthquake)
##Read in mobile activity data
Mobileact <- read.csv('Mobile_activity_3months_scrambled.csv')
# Random select 1000 rows of data due to big size
Mobileact <- Mobileact[sample(nrow(Mobileact), 1000), ]
#head(Mobileact)
##Yunjia##
## Not using this dataset yet...
#PowerPlants <- read.csv("PowerPlants.csv")
#head(PowerPlants)
## Make all the column names lowercase
names(CancerRates) <- tolower(names(CancerRates))
#head(CancerRates)
names(CancerRatesB) <- tolower(names(CancerRatesB))
#head(CancerRatesB)
# Rename columns to make for a clean df merge later.
##GEOID is the same as FIPS
colnames(CancerRates) <- c("location", "GEOID", "rate")
#head(CancerRates)
colnames(CancerRatesB) <- c("location", "GEOID", "rate")
#head(CancerRatesB)
colnames(LandUse) <- c("offset", "lat", "lng", "url", "name")
#head(LandUse)
##Yunjia##
##Set column names of earthquake data
colnames(Earthquake) <- c("Src", "Eqid", "Version", "Datetime", "Lat", "Lng", "Mag", "Depth", "NST", "Region")
##drop irrelevant columns
Earthquake$Src <- NULL
Earthquake$Version <- NULL
##Set column names of mobile activity data
colnames(Mobileact) <- c("Lat", "Lng", "timestep", "count")
##Yunjia##
##Add leading zeos to any FIPS code that's less than 5 digits long to get a good match.
##formatC is from C code formatting - creates a 5 digit int
CancerRates$GEOID <- formatC(CancerRates$GEOID, width = 5, format = "d", flag = "0")
#head(CancerRates)
CancerRatesB$GEOID <- formatC(CancerRatesB$GEOID, width = 5, format = "d", flag = "0")
#head(CancerRatesB)
## Convert column called location to two columns: State and County
CancerRates <- separate(CancerRates, location, into = c("county", "state"), sep = ", ")
#head(CancerRates)
CancerRatesB <- separate(CancerRatesB, location, into = c("county", "state"), sep = ", ")
#head(CancerRatesB)
##Remove the (...) from the state values
CancerRates[] <- lapply(CancerRates, function(x) gsub("\\s*\\([^\\)]+\\)", "", x))
#head(CancerRates)
CancerRatesB[] <- lapply(CancerRatesB, function(x) gsub("\\s*\\([^\\)]+\\)", "", x))
#head(CancerRatesB)
##Remove the space# from the end of some of the values in the rate column
CancerRatesB[] <- lapply(CancerRatesB, function(x) gsub("\\#", "", x))
#CancerRatesB
# Convert full state names to abbreviations for a clean df merge later.
CancerRates$state <- state.abb[match(CancerRates$state,state.name)]
#head(CancerRates)
CancerRatesB$state <- state.abb[match(CancerRatesB$state,state.name)]
#head(CancerRatesB)
#Change CancerRates$rate to a number
CancerRates$rate <- as.numeric(as.character(CancerRates$rate))
#head(CancerRates)
CancerRatesB$rate <- as.numeric(as.character(CancerRatesB$rate))
#head(CancerRatesB)
# Download county shape file.
## !! This is important. Shape files can be found here
#https://www.census.gov/geo/maps-data/data/cbf/cbf_counties.html
#us.map <- tigris::counties(cb = TRUE, year = 2015)
#OR
# Download county shape file from Tiger.
# https://www.census.gov/geo/maps-data/data/cbf/cbf_counties.html
# I downloaded the zip and placed all files in the zip into my RStudio folder
us.map <- readOGR(dsn = ".", layer = "cb_2016_us_county_20m", stringsAsFactors = FALSE)
#head(us.map)
# Remove Alaska(2), Hawaii(15), Puerto Rico (72), Guam (66), Virgin Islands (78), American Samoa (60)
#  Mariana Islands (69), Micronesia (64), Marshall Islands (68), Palau (70), Minor Islands (74)
us.map <- us.map[!us.map$STATEFP %in% c("02", "15", "72", "66", "78", "60", "69",
"64", "68", "70", "74"),]
us.map <- us.map[!us.map$STATEFP %in% c("81", "84", "86", "87", "89", "71", "76",
"95", "79"),]
# Merge spatial df with downloaded data.
## This is important
## Now we have our data and the needed carto data
cancermap <- merge(us.map, CancerRates, by=c("GEOID"))
cancermapB <- merge(us.map, CancerRatesB, by=c("GEOID"))
# Format popup data for leaflet map.
popup_dat <- paste0("<strong>County: </strong>",
cancermap$county,
"<br><strong>Cancer Rate (Age Adjusted) Out of 100,000: </strong>",
cancermap$rate)
##Yunjia##
# Format popup data for leaflet map of cancermapB
popup_datB <- paste0("<strong>County: </strong>",
cancermapB$county,
"<br><strong>Cancer Rate: </strong>",
cancermapB$rate)
##Yunjia##
#Color Pallette
#pal <- colorQuantile("YlOrRd", NULL, n = 9)
# Render final map in leaflet.The better map is below so this is
## commented out
# leaflet(data = cancermap) %>% addTiles() %>%
#   addPolygons(fillColor = ~pal(rate),
#               fillOpacity = 0.8,
#               color = "#BDBDC3",
#               weight = 1,
#               popup = popup_dat) %>%
#   addMarkers(lat=39.8, lng=-105.2, popup="Rocky Flats SuperFund Site")
#Grouping for map options and User Choices
#https://rstudio.github.io/leaflet/showhide.html
##Make pop up for the land use sites
# Format popup data for leaflet map.
popup_LU <- paste0("<strong>Use Name: </strong>",
LandUse$name,
"<br><strong>Link: </strong>",
LandUse$url)
##Yunjia##
# Format earthquake popup data for leaflet map
popup_EQ <- paste0("<strong>EQID: </strong>",
Earthquake$Eqid,
"<br><strong>Time: </strong>",
Earthquake$Datetime,
"<br><strong>Magnitude: </strong>",
Earthquake$Mag,
"<br><strong>Regin: </strong>",
Earthquake$Region)
# Format mobile activity data for leaflet map
popup_MA <- paste0("<strong>Timestep: </strong>",
Mobileact$timestep,
"<br><strong>Count: </strong>",
Mobileact$count)
##Yunjia##
pal <- colorQuantile("YlOrRd", NULL, n = 9)
gmap <- leaflet(data = cancermap) %>%
# Base groups
addTiles() %>%
setView(lng = -105, lat = 40, zoom = 4) %>%
addPolygons(fillColor = ~pal(rate),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1,
popup = popup_dat,
group="Cancer Rate/100,000 by Counties") %>%
##Yunjia##
# add base for breast cancer data
addPolygons(fillColor = ~pal(rate),
fillOpacity = 0.8,
color = "#6C2929",
weight = 1,
popup = popup_datB,
group = "Breast Cancer Rate") %>%
##Yunjia##
# Overlay groups
addMarkers(data=LandUse,lat=~lat, lng=~lng, popup=popup_LU, group = "Land Use Sites") %>%
##Yunjia##
# add circles to the location for earthquakes
addCircles(data=Earthquake, lat=~Lat, lng=~Lng, popup=popup_EQ, group = "Earthquakes") %>%
# add circle marks to the location for mobile activities
addCircleMarkers(data = Mobileact, lng = ~Lng, lat = ~Lat, popup=popup_MA, color = "green", group = "Mobile Activity") %>%
##Yunjia
# Layers control
addLayersControl(
baseGroups = c("Cancer Rate/100,000 by Counties", "Breast Cancer Rate"),
##Yunjia##
# add overlay groups
overlayGroups = c("Land Use Sites", "Earthquakes", "Mobile Activity"),
##Yunjia##
options = layersControlOptions(collapsed = FALSE)
)
gmap
saveWidget(gmap, 'US_county_cancer_poll_map_modified.html', selfcontained = TRUE)
